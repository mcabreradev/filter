name: Publish to npm

on:
  pull_request:
    types: [closed]
    branches:
      - prod

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  publish:
    name: 📦 Publish to npm
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'

      - name: 📥 Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🔍 Type check
        run: pnpm run typecheck

      - name: 🧹 Lint
        run: pnpm run lint

      - name: 🃏 Run tests
        run: pnpm run test

      - name: 🏗️ Build
        run: pnpm run build

      - name: 📋 Verify build output
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          echo "Build files:"
          ls -la build/

      - name: 🔍 Determine version bump
        id: version
        run: |
          # Get PR title and commits to determine version bump
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"
          
          # Check for version indicators in PR title or commit messages
          if echo "$PR_TITLE" | grep -iE "(breaking|major|BREAKING CHANGE)"; then
            echo "type=major" >> $GITHUB_OUTPUT
            echo "🚨 Detected MAJOR version bump"
          elif echo "$PR_TITLE" | grep -iE "(feat|feature|minor)"; then
            echo "type=minor" >> $GITHUB_OUTPUT
            echo "✨ Detected MINOR version bump"
          else
            echo "type=patch" >> $GITHUB_OUTPUT
            echo "🔧 Detected PATCH version bump"
          fi

      - name: 📈 Bump version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          pnpm version ${{ steps.version.outputs.type }} --no-git-tag-version
          git add package.json
          git commit -m "chore: bump version to $(node -p "require('./package.json').version")"
          git push

      - name: 📝 Create Git Tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          git tag -a "v${PACKAGE_VERSION}" -m "Release v${PACKAGE_VERSION}"
          git push origin "v${PACKAGE_VERSION}"

      - name: 🚀 Publish to npm
        run: pnpm publish --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

